; ModuleID = '/home/runner/work/Vulnerability-Assessment/Vulnerability-Assessment/test_cases_bc/CWE-416_Use_After_Free_c/CWE416_Use_After_Free_08.c.bc'
source_filename = "/home/runner/work/Vulnerability-Assessment/Vulnerability-Assessment/test_cases/CWE-416_Use_After_Free_c/CWE416_Use_After_Free_08.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct._IO_FILE = type { i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, %struct._IO_marker*, %struct._IO_FILE*, i32, i32, i64, i16, i8, [1 x i8], i8*, i64, %struct._IO_codecvt*, %struct._IO_wide_data*, %struct._IO_FILE*, i8*, i64, i32, [20 x i8] }
%struct._IO_marker = type opaque
%struct._IO_codecvt = type opaque
%struct._IO_wide_data = type opaque
%struct.auth = type { [32 x i8] }

@.str = private unnamed_addr constant [16 x i8] c"Enter command: \00", align 1
@stdin = external dso_local global %struct._IO_FILE*, align 8
@.str.1 = private unnamed_addr constant [6 x i8] c"auth \00", align 1
@auth = dso_local global %struct.auth* null, align 8
@.str.2 = private unnamed_addr constant [6 x i8] c"reset\00", align 1
@.str.3 = private unnamed_addr constant [6 x i8] c"login\00", align 1
@.str.4 = private unnamed_addr constant [11 x i8] c"!authFreed\00", align 1
@.str.5 = private unnamed_addr constant [131 x i8] c"/home/runner/work/Vulnerability-Assessment/Vulnerability-Assessment/test_cases/CWE-416_Use_After_Free_c/CWE416_Use_After_Free_08.c\00", align 1
@__PRETTY_FUNCTION__.main = private unnamed_addr constant [11 x i8] c"int main()\00", align 1
@.str.6 = private unnamed_addr constant [14 x i8] c"Username: %s\0A\00", align 1
@.str.7 = private unnamed_addr constant [11 x i8] c"myusername\00", align 1
@.str.8 = private unnamed_addr constant [15 x i8] c"Login success\0A\00", align 1
@.str.9 = private unnamed_addr constant [31 x i8] c"Please enter correct username\0A\00", align 1

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @main() #0 {
entry:
  %retval = alloca i32, align 4
  %authFreed = alloca i32, align 4
  %line = alloca [64 x i8], align 16
  store i32 0, i32* %retval, align 4
  store i32 0, i32* %authFreed, align 4
  br label %while.body

while.body:                                       ; preds = %if.end40, %entry
  %call = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str, i64 0, i64 0))
  %arraydecay = getelementptr inbounds [64 x i8], [64 x i8]* %line, i64 0, i64 0
  %0 = load %struct._IO_FILE*, %struct._IO_FILE** @stdin, align 8
  %call1 = call i8* @fgets(i8* %arraydecay, i32 64, %struct._IO_FILE* %0)
  %cmp = icmp eq i8* %call1, null
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %while.body
  br label %while.end

if.end:                                           ; preds = %while.body
  %arraydecay2 = getelementptr inbounds [64 x i8], [64 x i8]* %line, i64 0, i64 0
  %call3 = call i32 @strncmp(i8* %arraydecay2, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.1, i64 0, i64 0), i64 5)
  %cmp4 = icmp eq i32 %call3, 0
  br i1 %cmp4, label %if.then5, label %if.end16

if.then5:                                         ; preds = %if.end
  %call6 = call i8* @malloc(i64 8)
  %1 = bitcast i8* %call6 to %struct.auth*
  store %struct.auth* %1, %struct.auth** @auth, align 8
  store i32 0, i32* %authFreed, align 4
  %2 = load %struct.auth*, %struct.auth** @auth, align 8
  %3 = bitcast %struct.auth* %2 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 1 %3, i8 0, i64 8, i1 false)
  %arraydecay7 = getelementptr inbounds [64 x i8], [64 x i8]* %line, i64 0, i64 0
  %add.ptr = getelementptr inbounds i8, i8* %arraydecay7, i64 5
  %call8 = call i64 @strlen(i8* %add.ptr)
  %cmp9 = icmp ult i64 %call8, 31
  br i1 %cmp9, label %if.then10, label %if.end15

if.then10:                                        ; preds = %if.then5
  %4 = load %struct.auth*, %struct.auth** @auth, align 8
  %name = getelementptr inbounds %struct.auth, %struct.auth* %4, i32 0, i32 0
  %arraydecay11 = getelementptr inbounds [32 x i8], [32 x i8]* %name, i64 0, i64 0
  %arraydecay12 = getelementptr inbounds [64 x i8], [64 x i8]* %line, i64 0, i64 0
  %add.ptr13 = getelementptr inbounds i8, i8* %arraydecay12, i64 5
  %call14 = call i8* @strcpy(i8* %arraydecay11, i8* %add.ptr13)
  br label %if.end15

if.end15:                                         ; preds = %if.then10, %if.then5
  br label %if.end16

if.end16:                                         ; preds = %if.end15, %if.end
  %arraydecay17 = getelementptr inbounds [64 x i8], [64 x i8]* %line, i64 0, i64 0
  %call18 = call i32 @strncmp(i8* %arraydecay17, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.2, i64 0, i64 0), i64 5)
  %cmp19 = icmp eq i32 %call18, 0
  br i1 %cmp19, label %if.then20, label %if.end21

if.then20:                                        ; preds = %if.end16
  %5 = load %struct.auth*, %struct.auth** @auth, align 8
  %6 = bitcast %struct.auth* %5 to i8*
  call void @free(i8* %6)
  store i32 1, i32* %authFreed, align 4
  br label %if.end21

if.end21:                                         ; preds = %if.then20, %if.end16
  %arraydecay22 = getelementptr inbounds [64 x i8], [64 x i8]* %line, i64 0, i64 0
  %call23 = call i32 @strncmp(i8* %arraydecay22, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.3, i64 0, i64 0), i64 5)
  %cmp24 = icmp eq i32 %call23, 0
  br i1 %cmp24, label %if.then25, label %if.end40

if.then25:                                        ; preds = %if.end21
  %7 = load i32, i32* %authFreed, align 4
  %tobool = icmp ne i32 %7, 0
  br i1 %tobool, label %if.else, label %if.then26

if.then26:                                        ; preds = %if.then25
  br label %if.end27

if.else:                                          ; preds = %if.then25
  call void @__assert_fail(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.4, i64 0, i64 0), i8* getelementptr inbounds ([131 x i8], [131 x i8]* @.str.5, i64 0, i64 0), i32 40, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @__PRETTY_FUNCTION__.main, i64 0, i64 0)) #4
  unreachable

if.end27:                                         ; preds = %if.then26
  %8 = load %struct.auth*, %struct.auth** @auth, align 8
  %name28 = getelementptr inbounds %struct.auth, %struct.auth* %8, i32 0, i32 0
  %arraydecay29 = getelementptr inbounds [32 x i8], [32 x i8]* %name28, i64 0, i64 0
  %call30 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.6, i64 0, i64 0), i8* %arraydecay29)
  %9 = load %struct.auth*, %struct.auth** @auth, align 8
  %name31 = getelementptr inbounds %struct.auth, %struct.auth* %9, i32 0, i32 0
  %arraydecay32 = getelementptr inbounds [32 x i8], [32 x i8]* %name31, i64 0, i64 0
  %call33 = call i32 @strncmp(i8* %arraydecay32, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.7, i64 0, i64 0), i64 10)
  %cmp34 = icmp eq i32 %call33, 0
  br i1 %cmp34, label %if.then35, label %if.else37

if.then35:                                        ; preds = %if.end27
  %call36 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.8, i64 0, i64 0))
  br label %if.end39

if.else37:                                        ; preds = %if.end27
  %call38 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.9, i64 0, i64 0))
  br label %if.end39

if.end39:                                         ; preds = %if.else37, %if.then35
  br label %if.end40

if.end40:                                         ; preds = %if.end39, %if.end21
  br label %while.body

while.end:                                        ; preds = %if.then
  ret i32 0
}

declare dso_local i32 @printf(i8*, ...) #1

declare dso_local i8* @fgets(i8*, i32, %struct._IO_FILE*) #1

declare dso_local i32 @strncmp(i8*, i8*, i64) #1

declare dso_local i8* @malloc(i64) #1

; Function Attrs: argmemonly nofree nosync nounwind willreturn writeonly
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #2

declare dso_local i64 @strlen(i8*) #1

declare dso_local i8* @strcpy(i8*, i8*) #1

declare dso_local void @free(i8*) #1

; Function Attrs: noreturn nounwind
declare dso_local void @__assert_fail(i8*, i8*, i32, i8*) #3

attributes #0 = { noinline nounwind optnone uwtable "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nofree nosync nounwind willreturn writeonly }
attributes #3 = { noreturn nounwind "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { noreturn nounwind }

!llvm.module.flags = !{!0}
!llvm.ident = !{!1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{!"clang version 12.0.0"}
