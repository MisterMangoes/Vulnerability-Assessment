; ModuleID = '/home/runner/work/Vulnerability-Assessment/Vulnerability-Assessment/test_cases_bc/CWE-476_NULL_Pointer_Dereference_c_SSA/CWE476_NULL_Pointer_Dereference_02.c.bc'
source_filename = "/home/runner/work/Vulnerability-Assessment/Vulnerability-Assessment/test_cases/CWE-476_NULL_Pointer_Dereference_c_SSA/CWE476_NULL_Pointer_Dereference_02.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

@.str = private unnamed_addr constant [13 x i8] c"data != NULL\00", align 1
@.str.1 = private unnamed_addr constant [155 x i8] c"/home/runner/work/Vulnerability-Assessment/Vulnerability-Assessment/test_cases/CWE-476_NULL_Pointer_Dereference_c_SSA/CWE476_NULL_Pointer_Dereference_02.c\00", align 1
@__PRETTY_FUNCTION__.main = private unnamed_addr constant [11 x i8] c"int main()\00", align 1

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @main() #0 {
entry:
  %retval = alloca i32, align 4
  %data = alloca i64*, align 8
  %data_1 = alloca i64**, align 8
  %i = alloca i32, align 4
  %i_1 = alloca i32*, align 8
  store i32 0, i32* %retval, align 4
  %call = call noalias i8* @malloc(i64 600) #3
  %0 = bitcast i8* %call to i64*
  store i64* %0, i64** %data, align 8
  store i64** %data, i64*** %data_1, align 8
  store i32 0, i32* %i, align 4
  store i32* %i, i32** %i_1, align 8
  %1 = load i32*, i32** %i_1, align 8
  store i32 0, i32* %1, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %entry
  %2 = load i32, i32* %i, align 4
  %cmp = icmp slt i32 %2, 75
  br i1 %cmp, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %3 = load i64**, i64*** %data_1, align 8
  %4 = load i64*, i64** %3, align 8
  %5 = load i32, i32* %i, align 4
  %idx.ext = sext i32 %5 to i64
  %add.ptr = getelementptr inbounds i64, i64* %4, i64 %idx.ext
  store i64 2, i64* %add.ptr, align 8
  br label %for.inc

for.inc:                                          ; preds = %for.body
  %6 = load i32, i32* %i, align 4
  %add = add nsw i32 %6, 1
  %7 = load i32*, i32** %i_1, align 8
  store i32 %add, i32* %7, align 4
  br label %for.cond, !llvm.loop !2

for.end:                                          ; preds = %for.cond
  %8 = load i64**, i64*** %data_1, align 8
  store i64* null, i64** %8, align 8
  %9 = load i64*, i64** %data, align 8
  %cmp1 = icmp ne i64* %9, null
  br i1 %cmp1, label %if.then, label %if.else

if.then:                                          ; preds = %for.end
  br label %if.end

if.else:                                          ; preds = %for.end
  call void @__assert_fail(i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([155 x i8], [155 x i8]* @.str.1, i64 0, i64 0), i32 24, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @__PRETTY_FUNCTION__.main, i64 0, i64 0)) #4
  unreachable

if.end:                                           ; preds = %if.then
  %10 = load i64**, i64*** %data_1, align 8
  %11 = load i64*, i64** %10, align 8
  %add.ptr2 = getelementptr inbounds i64, i64* %11, i64 10
  store i64 10, i64* %add.ptr2, align 8
  %12 = load i64*, i64** %data, align 8
  %13 = bitcast i64* %12 to i8*
  call void @free(i8* %13) #3
  ret i32 0
}

; Function Attrs: nounwind
declare dso_local noalias i8* @malloc(i64) #1

; Function Attrs: noreturn nounwind
declare dso_local void @__assert_fail(i8*, i8*, i32, i8*) #2

; Function Attrs: nounwind
declare dso_local void @free(i8*) #1

attributes #0 = { noinline nounwind optnone uwtable "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { noreturn nounwind "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind }
attributes #4 = { noreturn nounwind }

!llvm.module.flags = !{!0}
!llvm.ident = !{!1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{!"clang version 12.0.0"}
!2 = distinct !{!2, !3}
!3 = !{!"llvm.loop.mustprogress"}
