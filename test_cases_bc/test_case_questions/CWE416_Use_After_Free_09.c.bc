; ModuleID = '/home/runner/work/Vulnerability-Assessment/Vulnerability-Assessment/test_cases_bc/test_case_questions/CWE416_Use_After_Free_09.c.bc'
source_filename = "/home/runner/work/Vulnerability-Assessment/Vulnerability-Assessment/test_cases/test_case_questions/CWE416_Use_After_Free_09.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

@.str = private unnamed_addr constant [5 x i32] [i32 37, i32 108, i32 115, i32 10, i32 0], align 4

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @globalReturnsTrueOrFalse() #0 {
entry:
  %call = call i32 (i32, ...) bitcast (i32 (...)* @time to i32 (i32, ...)*)(i32 0)
  %call1 = call i32 (i32, ...) bitcast (i32 (...)* @srand to i32 (i32, ...)*)(i32 %call)
  %call2 = call i32 (...) @rand()
  %rem = srem i32 %call2, 2
  ret i32 %rem
}

declare dso_local i32 @srand(...) #1

declare dso_local i32 @time(...) #1

declare dso_local i32 @rand(...) #1

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @main() #0 {
entry:
  %retval = alloca i32, align 4
  %dataFreed = alloca i32, align 4
  %data = alloca i32*, align 8
  %dataAllocated = alloca i32, align 4
  %dataMemorySize = alloca i32, align 4
  store i32 0, i32* %retval, align 4
  store i32 0, i32* %dataFreed, align 4
  store i32* null, i32** %data, align 8
  store i32 0, i32* %dataAllocated, align 4
  %call = call i32 @globalReturnsTrueOrFalse()
  %tobool = icmp ne i32 %call, 0
  br i1 %tobool, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  store i32 1, i32* %dataAllocated, align 4
  store i32 400, i32* %dataMemorySize, align 4
  %0 = load i32, i32* %dataMemorySize, align 4
  %conv = sext i32 %0 to i64
  %call1 = call i8* @malloc(i64 %conv)
  %1 = bitcast i8* %call1 to i32*
  store i32* %1, i32** %data, align 8
  %2 = load i32*, i32** %data, align 8
  %call2 = call i32* @wmemset(i32* %2, i32 65, i64 99) #3
  %3 = load i32*, i32** %data, align 8
  %arrayidx = getelementptr inbounds i32, i32* %3, i64 99
  store i32 0, i32* %arrayidx, align 4
  %4 = load i32*, i32** %data, align 8
  %5 = bitcast i32* %4 to i8*
  call void @free(i8* %5)
  store i32 1, i32* %dataFreed, align 4
  br label %if.end

if.end:                                           ; preds = %if.then, %entry
  %6 = load i32, i32* %dataAllocated, align 4
  %tobool3 = icmp ne i32 %6, 0
  br i1 %tobool3, label %land.lhs.true, label %if.end8

land.lhs.true:                                    ; preds = %if.end
  %call4 = call i32 @globalReturnsTrueOrFalse()
  %tobool5 = icmp ne i32 %call4, 0
  br i1 %tobool5, label %if.then6, label %if.end8

if.then6:                                         ; preds = %land.lhs.true
  %7 = load i32*, i32** %data, align 8
  %call7 = call i32 (i32*, ...) @wprintf(i32* getelementptr inbounds ([5 x i32], [5 x i32]* @.str, i64 0, i64 0), i32* %7)
  br label %if.end8

if.end8:                                          ; preds = %if.then6, %land.lhs.true, %if.end
  ret i32 0
}

declare dso_local i8* @malloc(i64) #1

; Function Attrs: nounwind
declare dso_local i32* @wmemset(i32*, i32, i64) #2

declare dso_local void @free(i8*) #1

declare dso_local i32 @wprintf(i32*, ...) #1

attributes #0 = { noinline nounwind optnone uwtable "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind }

!llvm.module.flags = !{!0}
!llvm.ident = !{!1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{!"clang version 12.0.0"}
