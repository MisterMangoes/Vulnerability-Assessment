; ModuleID = '/home/runner/work/Vulnerability-Assessment/Vulnerability-Assessment/test_cases_bc/test_case_questions/CWE476_NULL_Pointer_Dereference_08.c.bc'
source_filename = "/home/runner/work/Vulnerability-Assessment/Vulnerability-Assessment/test_cases/test_case_questions/CWE476_NULL_Pointer_Dereference_08.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct._twoIntsStruct = type { i32, i32 }

@badData = dso_local global %struct._twoIntsStruct* null, align 8
@.str = private unnamed_addr constant [4 x i8] c"%d\0A\00", align 1

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @badFunction() #0 {
entry:
  %data = alloca %struct._twoIntsStruct*, align 8
  %0 = load %struct._twoIntsStruct*, %struct._twoIntsStruct** @badData, align 8
  store %struct._twoIntsStruct* %0, %struct._twoIntsStruct** %data, align 8
  %1 = load %struct._twoIntsStruct*, %struct._twoIntsStruct** %data, align 8
  %intOne = getelementptr inbounds %struct._twoIntsStruct, %struct._twoIntsStruct* %1, i32 0, i32 0
  %2 = load i32, i32* %intOne, align 4
  %call = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str, i64 0, i64 0), i32 %2)
  ret void
}

declare dso_local i32 @printf(i8*, ...) #1

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @main() #0 {
entry:
  %retval = alloca i32, align 4
  %data = alloca %struct._twoIntsStruct*, align 8
  store i32 0, i32* %retval, align 4
  store %struct._twoIntsStruct* null, %struct._twoIntsStruct** %data, align 8
  %0 = load %struct._twoIntsStruct*, %struct._twoIntsStruct** %data, align 8
  store %struct._twoIntsStruct* %0, %struct._twoIntsStruct** @badData, align 8
  call void @badFunction()
  ret i32 0
}

attributes #0 = { noinline nounwind optnone uwtable "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" "unsafe-fp-math"="false" "use-soft-float"="false" }

!llvm.module.flags = !{!0}
!llvm.ident = !{!1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{!"clang version 12.0.0"}
