//CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cpy_52

#include <cstdio>
#include <cstdlib>
#include <cstring>
#include <cassert>

int dataArraySize = 50;

void CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cpy_52c_badSink(char * data)
{
    {
        char source[100];
        memset(source, 'C', 100-1); /* fill with 'C's */
        source[100-1] = '\0'; /* null terminate */
        /* POTENTIAL FLAW: Possible buffer overflow if source is larger than data */
        assert(dataArraySize >= sizeof(source)/sizeof(source[0]));
        strcpy(data, source);
        printf("%s\n", data);
        free(data);
    }
}

void CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cpy_52b_badSink(char * data)
{
    CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cpy_52c_badSink(data);
}

int main()
{
    char * data;
    data = NULL;
    /* FLAW: Allocate and point data to a small buffer that is smaller than the large buffer used in the sinks */
    data = (char *)malloc(dataArraySize*sizeof(char));
    if (data == NULL) {exit(-1);}
    data[0] = '\0'; /* null terminate */
    CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cpy_52b_badSink(data);
    printf("%s\n", "finished");
    return 0;
}