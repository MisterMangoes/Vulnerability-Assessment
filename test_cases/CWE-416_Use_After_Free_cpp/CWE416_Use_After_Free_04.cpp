//CWE416_Use_After_Free__malloc_free_struct_62

#include <cstdio>
#include <cstdlib>
#include <cassert>

typedef struct _twoIntsStruct
{
    int intOne;
    int intTwo;
} twoIntsStruct;

void badSource(twoIntsStruct * &data)
{
    data = (twoIntsStruct *)malloc(100*sizeof(twoIntsStruct));
    if (data == NULL) {exit(-1);}
    {
        size_t i;
        for(i = 0; i < 100; i++)
        {
            data[i].intOne = 1;
            data[i].intTwo = 2;
        }
    }
    /* POTENTIAL FLAW: Free data in the source - the bad sink attempts to use data */
    free(data);
    data = NULL;
}

int main()
{
    twoIntsStruct * data;
    /* Initialize data */
    data = NULL;
    badSource(data);
    /* POTENTIAL FLAW: Use of data that may have been freed */
    assert(data != NULL);
    printf("%d -- %d\n", (&data[0])->intOne, (&data[0])->intTwo);
    /* POTENTIAL INCIDENTAL - Possible memory leak here if data was not freed */
    printf("%s\n", "finished");
    return 0;
}