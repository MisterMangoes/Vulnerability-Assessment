//CWE121_Stack_Based_Buffer_Overflow__src_wchar_t_alloca_cat_45

#include <cstdio>
#include <cwchar>
#include <cassert>
#include <alloca.h>

#define ALLOCA alloca

static wchar_t * CWE121_Stack_Based_Buffer_Overflow__src_wchar_t_alloca_cat_45_badData;

int dataArraySize = 100;

static void badSink()
{
    wchar_t * data = CWE121_Stack_Based_Buffer_Overflow__src_wchar_t_alloca_cat_45_badData;
    {
        wchar_t dest[50] = L"";
        /* POTENTIAL FLAW: Possible buffer overflow if data is larger than sizeof(dest)-wcslen(dest)*/
        assert(dataArraySize <= ((sizeof(dest)/sizeof(dest[0])) - wcslen(dest)));
        wcscat(dest, data);
        wprintf(L"%ls\n", data);
    }
}

int main()
{
    wchar_t * data;
    wchar_t * dataBuffer = (wchar_t *)ALLOCA(dataArraySize*sizeof(wchar_t));
    data = dataBuffer;
    /* FLAW: Initialize data as a large buffer that is larger than the small buffer used in the sink */
    wmemset(data, L'A', dataArraySize-1); /* fill with L'A's */
    data[dataArraySize-1] = L'\0'; /* null terminate */
    CWE121_Stack_Based_Buffer_Overflow__src_wchar_t_alloca_cat_45_badData = data;
    badSink();
    printf("%s\n", "finished");
    return 0;
}