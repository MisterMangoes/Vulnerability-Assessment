//CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_memmove_14

#include <cstdio>
#include <cstring>
#include <cassert>
#include <alloca.h>

#define ALLOCA alloca
#define SRC_STRING "AAAAAAAAAA"

int globalFive = 5;

int main()
{
    char * data;
    int dataArraySize = 10;
    char * dataBadBuffer = (char *)ALLOCA((dataArraySize)*sizeof(char));
    if(globalFive==5)
    {
        /* FLAW: Set a pointer to a buffer that does not leave room for a NULL terminator when performing
         * string copies in the sinks  */
        data = dataBadBuffer;
        data[0] = '\0'; /* null terminate */
    }
    {
        char source[10+1] = SRC_STRING;
        /* Copy length + 1 to include NUL terminator from source */
        /* POTENTIAL FLAW: data may not have enough space to hold source */
        assert(dataArraySize >= sizeof(source)/sizeof(source[0]));
        memmove(data, source, (strlen(source) + 1) * sizeof(char));
        printf("%s\n", data);
    }
    printf("%s\n", "finished");
    return 0;
}

