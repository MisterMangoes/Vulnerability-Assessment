//CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_10

#include <cstdio>
#include <cstdlib>
#include <cassert>

#define CHAR_ARRAY_SIZE (3 * sizeof(data) + 2)

int globalTrue = 1;

int main()
{
    int data;
    /* Initialize data */
    data = -1;
    if(globalTrue)
    {
        {
            char inputBuffer[CHAR_ARRAY_SIZE] = "";
            /* POTENTIAL FLAW: Read data from the console using fgets() */
            if (fgets(inputBuffer, CHAR_ARRAY_SIZE, stdin) != NULL)
            {
                /* Convert to int */
                data = atoi(inputBuffer);
            }
            else
            {
                printf("%s\n", "fgets() failed.");
            }
        }
    }
    if(globalTrue)
    {
        {
            int i;
            int buffer[10] = { 0 };
            /* POTENTIAL FLAW: Attempt to write to an index of the array that is above the upper bound
            * This code does check to see if the array index is negative */
            if (data >= 0)
            {
                assert(data < sizeof(buffer)/sizeof(buffer[0]));
                buffer[data] = 1;
                /* Print the array values */
                for(i = 0; i < 10; i++)
                {
                    printf("%d\n", buffer[i]);
                }
            }
            else
            {
                printf("%s\n", "ERROR: Array index is negative.");
            }
        }
    }
    printf("%s\n", "finished");
    return 0;
}