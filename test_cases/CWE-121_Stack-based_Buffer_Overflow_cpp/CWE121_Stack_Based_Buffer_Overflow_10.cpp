//CWE121_Stack_Based_Buffer_Overflow__CWE129_large_34

#include <cstdio>
#include <cassert>

typedef union
{
    int unionFirst;
    int unionSecond;
} CWE121_Stack_Based_Buffer_Overflow__CWE129_large_34_unionType;

int main()
{
    int data;
    CWE121_Stack_Based_Buffer_Overflow__CWE129_large_34_unionType myUnion;
    /* Initialize data */
    data = -1;
    /* POTENTIAL FLAW: Use an invalid index */
    data = 10;
    myUnion.unionFirst = data;
    {
        int data = myUnion.unionSecond;
        {
            int i;
            int buffer[10] = { 0 };
            /* POTENTIAL FLAW: Attempt to write to an index of the array that is above the upper bound
            * This code does check to see if the array index is negative */
            if (data >= 0)
            {
                assert(data < sizeof(buffer)/sizeof(buffer[0]));
                buffer[data] = 1;
                /* Print the array values */
                for(i = 0; i < 10; i++)
                {
                    printf("%d\n", buffer[i]);
                }
            }
            else
            {
                printf("%s\n", "ERROR: Array index is negative.");
            }
        }
    }
    printf("%s\n", "finished");
    return 0;
}