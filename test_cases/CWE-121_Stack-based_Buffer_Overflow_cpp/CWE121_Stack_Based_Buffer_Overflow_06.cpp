//CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_ncpy_72

#include <cstdio>
#include <cstring>
#include <vector>
#include <cassert>

using namespace std;

#define SRC_STRING "AAAAAAAAAA"

int dataArraySize = 10;

void badSink(vector<char *> dataVector)
{
    /* copy data out of dataVector */
    char * data = dataVector[2];
    {
        char source[10+1] = SRC_STRING;
        /* Copy length + 1 to include NUL terminator from source */
        /* POTENTIAL FLAW: data may not have enough space to hold source */
        assert(sizeof(dataArraySize) >= sizeof(source)/sizeof(source[0]));
        strncpy(data, source, strlen(source) + 1);
        printf("%s\n", data);
    }
}

int main()
{
    char * data;
    vector<char *> dataVector;
    char dataBadBuffer[dataArraySize];
    /* FLAW: Set a pointer to a buffer that does not leave room for a NULL terminator when performing
     * string copies in the sinks  */
    data = dataBadBuffer;
    data[0] = '\0'; /* null terminate */
    /* Put data in a vector */
    dataVector.insert(dataVector.end(), 1, data);
    dataVector.insert(dataVector.end(), 1, data);
    dataVector.insert(dataVector.end(), 1, data);
    badSink(dataVector);
    printf("%s\n", "finished");
    return 0;
}